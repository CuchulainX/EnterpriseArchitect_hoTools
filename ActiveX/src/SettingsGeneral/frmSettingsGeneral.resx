<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="chkAdvancedFeatures.ToolTip" xml:space="preserve">
    <value>Add advanved features:
- Display Behavior (Display related Behavior of Operation)
- Specification (Display all files of Element)
- Update Parameter (Operation-&gt;Activity Parameter)
- Locate Operation (From Activity to Operation)
- Find Usage (Element, Diagram, Operation, Connector)
- Locate Type (find the type)
- Composite (locate composite)</value>
  </data>
  <data name="label29.ToolTip" xml:space="preserve">
    <value>Add advanved features:
- Display Behavior (Display related Behavior of Operation)
- Specification (Display all files of Element)
- Update Parameter (Operation-&gt;Activity Parameter)
- Locate Operation (From Activity to Operation)
- Find Usage (Element, Diagram, Operation, Connector)
- Locate Type (find the type)
- Composite (locate composite)</value>
  </data>
  <data name="txtQuickSearch.ToolTip" xml:space="preserve">
    <value>Search  Name for Quick Search (Tip: Quick Search from MDG hoTools).
- If you mostly use a "your Search" enter the name
- If you prefer to use autocomplete and Fuzzy Search leave it blank



- Simple (EA Standard Search)  or
- Other EA Model Search or
- Your own Search 
- SQL File name like *.sql (hoTools searches in SQL Paths)
- SQL Full file name (c:\....\*.sql)

Your most frequently Model Items at your finger tip.

Keep it empty to hide Quick Search support</value>
  </data>
  <data name="txtFileManagerPath.ToolTip" xml:space="preserve">
    <value>Path to a File Manager like:
- Explorer.exe (default, leave it empty)
- Totalcmd.exe

Example:
c:\Program Files (x86)\totalcmd\TOTALCMD64.EXE

Think if you have to change the %PATH% environment variable</value>
  </data>
  <data name="chkShortKeySupport.ToolTip" xml:space="preserve">
    <value>Enable Global Key Support e.g.:
- F1+CTRL+SHFT  Lock Package Recursive
- F2+CTRL+SHFT  Unlock Package Recursive
- F3+CTRL+SHFT  Run Search 'myModule' with &lt;Search Text&gt; 'A*'
- F4+CTRL+SHFT  Run Search 'myModule' with &lt;Search Text&gt; 'ZZ*'

Define a key combination for a search or a service (see Settings Keys).

You have to restart EA to activate the configured settings.</value>
  </data>
  <data name="label4.ToolTip" xml:space="preserve">
    <value>Enable Global Key Support e.g.:
- F1+CTRL+SHFT  Lock Package Recursive
- F2+CTRL+SHFT  Unlock Package Recursive
- F3+CTRL+SHFT  Run Search 'myModule' with &lt;Search Text&gt; 'A*'
- F4+CTRL+SHFT  Run Search 'myModule' with &lt;Search Text&gt; 'ZZ*'

Define a key combination for a search or a service (see Settings Keys).

You have to restart EA to activate the configured settings.</value>
  </data>
  <data name="groupBox2.ToolTip" xml:space="preserve">
    <value>Define the MDG you want to load:
- No MDG
- hoToolsBasic.xml MDG (Basic queries and Scripts)
- hoToolsCompilation.xml   MDG (all queries &amp; script) 

Note:
Searches usually are project or organisation specific. </value>
  </data>
  <data name="chkConveyedItemSupport.ToolTip" xml:space="preserve">
    <value>Buttons to support Conveyed Items on connectors like information flow:
- Get Connector Items for selected connector
- Get Connector for selected item

You can easily implement such functions by search and macros like:
- '#CONVEYED_ITEMS#'

</value>
  </data>
  <data name="label13.ToolTip" xml:space="preserve">
    <value>Quick Search:
- EA Search Name
- SQL file ('mySql.sql') relative to SQL Path
- SQL File (absolute file Path)
- Blank for mostly using Autocomplete or Fuzzy Search to find your Search

- If you mostly use a "your Search" enter the name
- If you prefer to use autocomplete and Fuzzy Search leave it blank</value>
  </data>
  <data name="_rbPortSynchronizationDelete.ToolTip" xml:space="preserve">
    <value>hoTools provides features to update the ports of a Part by its Class/Block. 


The following is possible for a Part:
- Off: No synchronization
- Only add new Ports: Ports are added, no Port is deleted or marked
- Mark Port as to delete: A Port not available in Class/Block is suffixed by '_DeleteMe'
- Delete Port: A Port not available in Block is deleted from Part</value>
  </data>
  <data name="_rbPortSynchronizationMark.ToolTip" xml:space="preserve">
    <value>hoTools provides features to update the ports of a Part by its Class/Block. 


The following is possible for a Part:
- Off: No synchronization
- Only add new Ports: Ports are added, no Port is deleted or marked
- Mark Port as to delete: A Port not available in Class/Block is suffixed by '_DeleteMe'
- Delete Port: A Port not available in Block is deleted from Part</value>
  </data>
  <data name="_rbPortSynchronizationNew.ToolTip" xml:space="preserve">
    <value>hoTools provides features to update the ports of a Part by its Class/Block. 


The following is possible for a Part:
- Off: No synchronization
- Only add new Ports: Ports are added, no Port is deleted or marked
- Mark Port as to delete: A Port not available in Class/Block is suffixed by '_DeleteMe'
- Delete Port: A Port not available in Block is deleted from Part</value>
  </data>
  <data name="_rbPortSynchronizationOff.ToolTip" xml:space="preserve">
    <value>hoTools provides features to update the ports of a Part by its Class/Block. 


The following is possible for a Part:
- Off: No synchronization
- Only add new Ports: Ports are added, no Port is deleted or marked
- Mark Port as to delete: A Port not available in Class/Block is suffixed by '_DeleteMe'
- Delete Port: A Port not available in Block is deleted from Part</value>
  </data>
  <data name="groupBox4.ToolTip" xml:space="preserve">
    <value>hoTools provides features to update the ports of a Part by its Class/Block. 


The following is possible for a Part:
- Off: No synchronization
- Only add new Ports: Ports are added, no Port is deleted or marked
- Mark Port as to delete: A Port not available in Class/Block is suffixed by '_DeleteMe'
- Delete Port: A Port not available in Block is deleted from Part

</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <data name="label14.ToolTip" xml:space="preserve">
    <value>Add advanved features:
- Display Behavior (Display related Behavior of Operation)
- Specification (Display all files of Element)
- Update Parameter (Operation-&gt;Activity Parameter)
- Locate Operation (From Activity to Operation)
- Find Usage (Element, Diagram, Operation, Connector)
- Locate Type (find the type)
- Composite (locate composite)</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>50</value>
  </metadata>
</root>