//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;

using LinqToDB;
using LinqToDB.Common;
using LinqToDB.Data;
using LinqToDB.DataProvider.SqlServer;
using LinqToDB.Extensions;
using LinqToDB.Mapping;

namespace DataModels.SqlServer
{
    /// <summary>
    /// Database       : EAExample
    /// Data Source    : localhost\SQLEXPRESS
    /// Server Version : 13.00.4001
    /// </summary>
    public partial class EaSqlServerDataModel : LinqToDB.Data.DataConnection
    {
        public ITable<Auto> Autoes { get { return this.GetTable<Auto>(); } }
        public ITable<t_attribute> t_attribute { get { return this.GetTable<t_attribute>(); } }
        public ITable<t_attributeconstraints> t_attributeconstraints { get { return this.GetTable<t_attributeconstraints>(); } }
        public ITable<t_attributetag> t_attributetag { get { return this.GetTable<t_attributetag>(); } }
        public ITable<t_authors> t_authors { get { return this.GetTable<t_authors>(); } }
        public ITable<t_cardinality> t_cardinality { get { return this.GetTable<t_cardinality>(); } }
        public ITable<t_category> t_category { get { return this.GetTable<t_category>(); } }
        public ITable<t_clients> t_clients { get { return this.GetTable<t_clients>(); } }
        public ITable<t_complexitytypes> t_complexitytypes { get { return this.GetTable<t_complexitytypes>(); } }
        public ITable<t_connector> t_connector { get { return this.GetTable<t_connector>(); } }
        public ITable<t_connectorconstraint> t_connectorconstraint { get { return this.GetTable<t_connectorconstraint>(); } }
        public ITable<t_connectortag> t_connectortag { get { return this.GetTable<t_connectortag>(); } }
        public ITable<t_connectortypes> t_connectortypes { get { return this.GetTable<t_connectortypes>(); } }
        public ITable<t_constants> t_constants { get { return this.GetTable<t_constants>(); } }
        public ITable<t_constrainttypes> t_constrainttypes { get { return this.GetTable<t_constrainttypes>(); } }
        public ITable<t_datatypes> t_datatypes { get { return this.GetTable<t_datatypes>(); } }
        public ITable<t_diagram> t_diagram { get { return this.GetTable<t_diagram>(); } }
        public ITable<t_diagramlinks> t_diagramlinks { get { return this.GetTable<t_diagramlinks>(); } }
        public ITable<t_diagramobjects> t_diagramobjects { get { return this.GetTable<t_diagramobjects>(); } }
        public ITable<t_diagramtypes> t_diagramtypes { get { return this.GetTable<t_diagramtypes>(); } }
        public ITable<t_document> t_document { get { return this.GetTable<t_document>(); } }
        public ITable<t_ecf> t_ecf { get { return this.GetTable<t_ecf>(); } }
        public ITable<t_efforttypes> t_efforttypes { get { return this.GetTable<t_efforttypes>(); } }
        public ITable<t_files> t_files { get { return this.GetTable<t_files>(); } }
        public ITable<t_genopt> t_genopt { get { return this.GetTable<t_genopt>(); } }
        public ITable<t_glossary> t_glossary { get { return this.GetTable<t_glossary>(); } }
        public ITable<t_html> t_html { get { return this.GetTable<t_html>(); } }
        public ITable<t_image> t_image { get { return this.GetTable<t_image>(); } }
        public ITable<t_implement> t_implement { get { return this.GetTable<t_implement>(); } }
        public ITable<t_issues> t_issues { get { return this.GetTable<t_issues>(); } }
        public ITable<t_lists> t_lists { get { return this.GetTable<t_lists>(); } }
        public ITable<t_mainttypes> t_mainttypes { get { return this.GetTable<t_mainttypes>(); } }
        public ITable<t_method> t_method { get { return this.GetTable<t_method>(); } }
        public ITable<t_metrictypes> t_metrictypes { get { return this.GetTable<t_metrictypes>(); } }
        public ITable<t_object> t_object { get { return this.GetTable<t_object>(); } }
        public ITable<t_objectconstraint> t_objectconstraint { get { return this.GetTable<t_objectconstraint>(); } }
        public ITable<t_objecteffort> t_objecteffort { get { return this.GetTable<t_objecteffort>(); } }
        public ITable<t_objectfiles> t_objectfiles { get { return this.GetTable<t_objectfiles>(); } }
        public ITable<t_objectmetrics> t_objectmetrics { get { return this.GetTable<t_objectmetrics>(); } }
        public ITable<t_objectproblems> t_objectproblems { get { return this.GetTable<t_objectproblems>(); } }
        public ITable<t_objectproperties> t_objectproperties { get { return this.GetTable<t_objectproperties>(); } }
        public ITable<t_objectrequires> t_objectrequires { get { return this.GetTable<t_objectrequires>(); } }
        public ITable<t_objectresource> t_objectresource { get { return this.GetTable<t_objectresource>(); } }
        public ITable<t_objectrisks> t_objectrisks { get { return this.GetTable<t_objectrisks>(); } }
        public ITable<t_objectscenarios> t_objectscenarios { get { return this.GetTable<t_objectscenarios>(); } }
        public ITable<t_objecttests> t_objecttests { get { return this.GetTable<t_objecttests>(); } }
        public ITable<t_objecttrx> t_objecttrx { get { return this.GetTable<t_objecttrx>(); } }
        public ITable<t_objecttypes> t_objecttypes { get { return this.GetTable<t_objecttypes>(); } }
        public ITable<t_ocf> t_ocf { get { return this.GetTable<t_ocf>(); } }
        public ITable<t_operation> t_operation { get { return this.GetTable<t_operation>(); } }
        public ITable<t_operationparams> t_operationparams { get { return this.GetTable<t_operationparams>(); } }
        public ITable<t_operationposts> t_operationposts { get { return this.GetTable<t_operationposts>(); } }
        public ITable<t_operationpres> t_operationpres { get { return this.GetTable<t_operationpres>(); } }
        public ITable<t_operationtag> t_operationtag { get { return this.GetTable<t_operationtag>(); } }
        public ITable<t_package> t_package { get { return this.GetTable<t_package>(); } }
        public ITable<t_palette> t_palette { get { return this.GetTable<t_palette>(); } }
        public ITable<t_paletteitem> t_paletteitem { get { return this.GetTable<t_paletteitem>(); } }
        public ITable<t_phase> t_phase { get { return this.GetTable<t_phase>(); } }
        public ITable<t_primitives> t_primitives { get { return this.GetTable<t_primitives>(); } }
        public ITable<t_problemtypes> t_problemtypes { get { return this.GetTable<t_problemtypes>(); } }
        public ITable<t_projectroles> t_projectroles { get { return this.GetTable<t_projectroles>(); } }
        public ITable<t_propertytypes> t_propertytypes { get { return this.GetTable<t_propertytypes>(); } }
        public ITable<t_requiretypes> t_requiretypes { get { return this.GetTable<t_requiretypes>(); } }
        public ITable<t_resources> t_resources { get { return this.GetTable<t_resources>(); } }
        public ITable<t_risktypes> t_risktypes { get { return this.GetTable<t_risktypes>(); } }
        public ITable<t_roleconstraint> t_roleconstraint { get { return this.GetTable<t_roleconstraint>(); } }
        public ITable<t_rtf> t_rtf { get { return this.GetTable<t_rtf>(); } }
        public ITable<t_rtfreport> t_rtfreport { get { return this.GetTable<t_rtfreport>(); } }
        public ITable<t_rules> t_rules { get { return this.GetTable<t_rules>(); } }
        public ITable<t_scenariotypes> t_scenariotypes { get { return this.GetTable<t_scenariotypes>(); } }
        public ITable<t_script> t_script { get { return this.GetTable<t_script>(); } }
        public ITable<t_secgroup> t_secgroup { get { return this.GetTable<t_secgroup>(); } }
        public ITable<t_secgrouppermission> t_secgrouppermission { get { return this.GetTable<t_secgrouppermission>(); } }
        public ITable<t_seclocks> t_seclocks { get { return this.GetTable<t_seclocks>(); } }
        public ITable<t_secpermission> t_secpermission { get { return this.GetTable<t_secpermission>(); } }
        public ITable<t_secpolicies> t_secpolicies { get { return this.GetTable<t_secpolicies>(); } }
        public ITable<t_secuser> t_secuser { get { return this.GetTable<t_secuser>(); } }
        public ITable<t_secusergroup> t_secusergroup { get { return this.GetTable<t_secusergroup>(); } }
        public ITable<t_secuserpermission> t_secuserpermission { get { return this.GetTable<t_secuserpermission>(); } }
        public ITable<t_snapshot> t_snapshot { get { return this.GetTable<t_snapshot>(); } }
        public ITable<t_statustypes> t_statustypes { get { return this.GetTable<t_statustypes>(); } }
        public ITable<t_stereotypes> t_stereotypes { get { return this.GetTable<t_stereotypes>(); } }
        public ITable<t_taggedvalue> t_taggedvalue { get { return this.GetTable<t_taggedvalue>(); } }
        public ITable<t_tasks> t_tasks { get { return this.GetTable<t_tasks>(); } }
        public ITable<t_tcf> t_tcf { get { return this.GetTable<t_tcf>(); } }
        public ITable<t_template> t_template { get { return this.GetTable<t_template>(); } }
        public ITable<t_testclass> t_testclass { get { return this.GetTable<t_testclass>(); } }
        public ITable<t_testplans> t_testplans { get { return this.GetTable<t_testplans>(); } }
        public ITable<t_testtypes> t_testtypes { get { return this.GetTable<t_testtypes>(); } }
        public ITable<t_trxtypes> t_trxtypes { get { return this.GetTable<t_trxtypes>(); } }
        public ITable<t_umlpattern> t_umlpattern { get { return this.GetTable<t_umlpattern>(); } }
        public ITable<t_version> t_version { get { return this.GetTable<t_version>(); } }
        public ITable<t_xref> t_xref { get { return this.GetTable<t_xref>(); } }
        public ITable<t_xrefsystem> t_xrefsystem { get { return this.GetTable<t_xrefsystem>(); } }
        public ITable<t_xrefuser> t_xrefuser { get { return this.GetTable<t_xrefuser>(); } }
        public ITable<usys_system> usys_system { get { return this.GetTable<usys_system>(); } }
        public ITable<usysOldTable> usysOldTables { get { return this.GetTable<usysOldTable>(); } }
        public ITable<usysQuery> usysQueries { get { return this.GetTable<usysQuery>(); } }
        public ITable<usysTable> usysTables { get { return this.GetTable<usysTable>(); } }

        public EaSqlServerDataModel()
        {
            InitDataContext();
        }

        public EaSqlServerDataModel(string configuration)
            : base(configuration)
        {
            InitDataContext();
        }

        partial void InitDataContext();

        #region FreeTextTable

        public class FreeTextKey<T>
        {
            public T Key;
            public int Rank;
        }

        private static MethodInfo _freeTextTableMethod1 = typeof(EaSqlServerDataModel).GetMethod("FreeTextTable", new Type[] { typeof(string), typeof(string) });

        [FreeTextTableExpression]
        public ITable<FreeTextKey<TKey>> FreeTextTable<TTable, TKey>(string field, string text)
        {
            return this.GetTable<FreeTextKey<TKey>>(
                this,
                _freeTextTableMethod1,
                field,
                text);
        }

        private static MethodInfo _freeTextTableMethod2 =
            typeof(EaSqlServerDataModel).GetMethods()
                .Where(m => m.Name == "FreeTextTable" && m.IsGenericMethod && m.GetParameters().Length == 2)
                .Where(m => m.GetParameters()[0].ParameterType.IsGenericTypeEx() && m.GetParameters()[0].ParameterType.GetGenericTypeDefinition() == typeof(Expression<>))
                .Where(m => m.GetParameters()[1].ParameterType == typeof(string))
                .Single();

        [FreeTextTableExpression]
        public ITable<FreeTextKey<TKey>> FreeTextTable<TTable, TKey>(Expression<Func<TTable, string>> fieldSelector, string text)
        {
            return this.GetTable<FreeTextKey<TKey>>(
                this,
                _freeTextTableMethod2,
                fieldSelector,
                text);
        }

        #endregion
    }

    [Table(Schema = "dbo", Name = "Auto")]
    public partial class Auto
    {
        [Column, Nullable] public DateTime? Zulassungdatum { get; set; } // date
        [Column, NotNull] public int AutoID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_attribute")]
    public partial class t_attribute
    {
        [Column, Nullable] public int? Object_ID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Scope { get; set; } // nvarchar(50)
        [Column, Nullable] public string Stereotype { get; set; } // nvarchar(50)
        [Column, Nullable] public string Containment { get; set; } // nvarchar(50)
        [Column, Nullable] public int? IsStatic { get; set; } // int
        [Column, Nullable] public int? IsCollection { get; set; } // int
        [Column, Nullable] public int? IsOrdered { get; set; } // int
        [Column, Nullable] public int? AllowDuplicates { get; set; } // int
        [Column, Nullable] public string LowerBound { get; set; } // nvarchar(50)
        [Column, Nullable] public string UpperBound { get; set; } // nvarchar(50)
        [Column, Nullable] public string Container { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public char? Derived { get; set; } // nvarchar(1)
        [PrimaryKey, Identity] public int ID { get; set; } // int
        [Column, Nullable] public int? Pos { get; set; } // int
        [Column, Nullable] public string GenOption { get; set; } // ntext
        [Column, Nullable] public int? Length { get; set; } // int
        [Column, Nullable] public int? Precision { get; set; } // int
        [Column, Nullable] public int? Scale { get; set; } // int
        [Column, Nullable] public int? Const { get; set; } // int
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, Nullable] public string Classifier { get; set; } // nvarchar(50)
        [Column, Nullable] public string Default { get; set; } // ntext
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(50)
        [Column, Nullable] public string StyleEx { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_attributeconstraints")]
    public partial class t_attributeconstraints
    {
        [Column, Nullable] public int? Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Constraint { get; set; } // nvarchar(255)
        [Column, Nullable] public string AttName { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [PrimaryKey(1), NotNull] public int ID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_attributetag")]
    public partial class t_attributetag
    {
        [PrimaryKey, Identity] public int PropertyID { get; set; } // int
        [Column, Nullable] public int? ElementID { get; set; } // int
        [Column, Nullable] public string Property { get; set; } // nvarchar(255)
        [Column, Nullable] public string VALUE { get; set; } // nvarchar(255)
        [Column, Nullable] public string NOTES { get; set; } // ntext
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
    }

    [Table(Schema = "dbo", Name = "t_authors")]
    public partial class t_authors
    {
        [PrimaryKey, NotNull] public string AuthorName { get; set; } // nvarchar(255)
        [Column, Nullable] public string Roles { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_cardinality")]
    public partial class t_cardinality
    {
        [PrimaryKey, NotNull] public string Cardinality { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_category")]
    public partial class t_category
    {
        [PrimaryKey, Identity] public int CategoryID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string NOTES { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_clients")]
    public partial class t_clients
    {
        [PrimaryKey, NotNull] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Organisation { get; set; } // nvarchar(255)
        [Column, Nullable] public string Phone1 { get; set; } // nvarchar(50)
        [Column, Nullable] public string Phone2 { get; set; } // nvarchar(50)
        [Column, Nullable] public string Mobile { get; set; } // nvarchar(50)
        [Column, Nullable] public string Fax { get; set; } // nvarchar(50)
        [Column, Nullable] public string Email { get; set; } // nvarchar(50)
        [Column, Nullable] public string Roles { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_complexitytypes")]
    public partial class t_complexitytypes
    {
        [PrimaryKey, NotNull] public string Complexity { get; set; } // nvarchar(50)
        [Column, Nullable] public int? NumericWeight { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_connector")]
    public partial class t_connector
    {
        [PrimaryKey, Identity] public int Connector_ID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Direction { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Connector_Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string SubType { get; set; } // nvarchar(50)
        [Column, Nullable] public string SourceCard { get; set; } // nvarchar(50)
        [Column, Nullable] public string SourceAccess { get; set; } // nvarchar(50)
        [Column, Nullable] public string SourceElement { get; set; } // nvarchar(50)
        [Column, Nullable] public string DestCard { get; set; } // nvarchar(50)
        [Column, Nullable] public string DestAccess { get; set; } // nvarchar(50)
        [Column, Nullable] public string DestElement { get; set; } // nvarchar(50)
        [Column, Nullable] public string SourceRole { get; set; } // nvarchar(50)
        [Column, Nullable] public string SourceRoleType { get; set; } // nvarchar(50)
        [Column, Nullable] public string SourceRoleNote { get; set; } // ntext
        [Column, Nullable] public string SourceContainment { get; set; } // nvarchar(50)
        [Column, Nullable] public int? SourceIsAggregate { get; set; } // int
        [Column, Nullable] public int? SourceIsOrdered { get; set; } // int
        [Column, Nullable] public string SourceQualifier { get; set; } // nvarchar(50)
        [Column, Nullable] public string DestRole { get; set; } // nvarchar(255)
        [Column, Nullable] public string DestRoleType { get; set; } // nvarchar(50)
        [Column, Nullable] public string DestRoleNote { get; set; } // ntext
        [Column, Nullable] public string DestContainment { get; set; } // nvarchar(50)
        [Column, Nullable] public int? DestIsAggregate { get; set; } // int
        [Column, Nullable] public int? DestIsOrdered { get; set; } // int
        [Column, Nullable] public string DestQualifier { get; set; } // nvarchar(50)
        [Column, Nullable] public int? Start_Object_ID { get; set; } // int
        [Column, Nullable] public int? End_Object_ID { get; set; } // int
        [Column, Nullable] public string Top_Start_Label { get; set; } // nvarchar(50)
        [Column, Nullable] public string Top_Mid_Label { get; set; } // nvarchar(50)
        [Column, Nullable] public string Top_End_Label { get; set; } // nvarchar(50)
        [Column, Nullable] public string Btm_Start_Label { get; set; } // nvarchar(50)
        [Column, Nullable] public string Btm_Mid_Label { get; set; } // nvarchar(50)
        [Column, Nullable] public string Btm_End_Label { get; set; } // nvarchar(50)
        [Column, Nullable] public int? Start_Edge { get; set; } // int
        [Column, Nullable] public int? End_Edge { get; set; } // int
        [Column, Nullable] public int? PtStartX { get; set; } // int
        [Column, Nullable] public int? PtStartY { get; set; } // int
        [Column, Nullable] public int? PtEndX { get; set; } // int
        [Column, Nullable] public int? PtEndY { get; set; } // int
        [Column, Nullable] public int? SeqNo { get; set; } // int
        [Column, Nullable] public int? HeadStyle { get; set; } // int
        [Column, Nullable] public int? LineStyle { get; set; } // int
        [Column, Nullable] public int? RouteStyle { get; set; } // int
        [Column, Nullable] public int? IsBold { get; set; } // int
        [Column, Nullable] public int? LineColor { get; set; } // int
        [Column, Nullable] public string Stereotype { get; set; } // nvarchar(50)
        [Column, Nullable] public char? VirtualInheritance { get; set; } // nvarchar(1)
        [Column, Nullable] public string LinkAccess { get; set; } // nvarchar(50)
        [Column, Nullable] public string PDATA1 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA2 { get; set; } // ntext
        [Column, Nullable] public string PDATA3 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA4 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA5 { get; set; } // ntext
        [Column, Nullable] public int? DiagramID { get; set; } // int
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
        [Column, Nullable] public string SourceConstraint { get; set; } // nvarchar(255)
        [Column, Nullable] public string DestConstraint { get; set; } // nvarchar(255)
        [Column, NotNull] public int SourceIsNavigable { get; set; } // int
        [Column, NotNull] public int DestIsNavigable { get; set; } // int
        [Column, NotNull] public int IsRoot { get; set; } // int
        [Column, NotNull] public int IsLeaf { get; set; } // int
        [Column, NotNull] public int IsSpec { get; set; } // int
        [Column, Nullable] public string SourceChangeable { get; set; } // nvarchar(12)
        [Column, Nullable] public string DestChangeable { get; set; } // nvarchar(12)
        [Column, Nullable] public string SourceTS { get; set; } // nvarchar(12)
        [Column, Nullable] public string DestTS { get; set; } // nvarchar(12)
        [Column, Nullable] public string StateFlags { get; set; } // nvarchar(255)
        [Column, Nullable] public string ActionFlags { get; set; } // nvarchar(255)
        [Column, NotNull] public int IsSignal { get; set; } // int
        [Column, NotNull] public int IsStimulus { get; set; } // int
        [Column, Nullable] public string DispatchAction { get; set; } // nvarchar(255)
        [Column, Nullable] public int? Target2 { get; set; } // int
        [Column, Nullable] public string StyleEx { get; set; } // ntext
        [Column, Nullable] public string SourceStereotype { get; set; } // nvarchar(255)
        [Column, Nullable] public string DestStereotype { get; set; } // nvarchar(255)
        [Column, Nullable] public string SourceStyle { get; set; } // ntext
        [Column, Nullable] public string DestStyle { get; set; } // ntext
        [Column, Nullable] public string EventFlags { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_connectorconstraint")]
    public partial class t_connectorconstraint
    {
        [PrimaryKey(1), NotNull] public int ConnectorID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Constraint { get; set; } // nvarchar(255)
        [Column, Nullable] public string ConstraintType { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_connectortag")]
    public partial class t_connectortag
    {
        [PrimaryKey, Identity] public int PropertyID { get; set; } // int
        [Column, Nullable] public int? ElementID { get; set; } // int
        [Column, Nullable] public string Property { get; set; } // nvarchar(255)
        [Column, Nullable] public string VALUE { get; set; } // nvarchar(255)
        [Column, Nullable] public string NOTES { get; set; } // ntext
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
    }

    [Table(Schema = "dbo", Name = "t_connectortypes")]
    public partial class t_connectortypes
    {
        [PrimaryKey, NotNull] public string Connector_Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_constants")]
    public partial class t_constants
    {
        [PrimaryKey, NotNull] public string ConstantName { get; set; } // nvarchar(50)
        [Column, Nullable] public string ConstantValue { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_constrainttypes")]
    public partial class t_constrainttypes
    {
        [PrimaryKey, NotNull] public string Constraint { get; set; } // nvarchar(16)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_datatypes")]
    public partial class t_datatypes
    {
        [Column, Nullable] public string Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string ProductName { get; set; } // nvarchar(50)
        [Column, Nullable] public string DataType { get; set; } // nvarchar(50)
        [Column, Nullable] public int? Size { get; set; } // int
        [Column, Nullable] public int? MaxLen { get; set; } // int
        [Column, Nullable] public int? MaxPrec { get; set; } // int
        [Column, Nullable] public int? MaxScale { get; set; } // int
        [Column, Nullable] public int? DefaultLen { get; set; } // int
        [Column, Nullable] public int? DefaultPrec { get; set; } // int
        [Column, Nullable] public int? DefaultScale { get; set; } // int
        [Column, Nullable] public int? User { get; set; } // int
        [Column, Nullable] public string PDATA1 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA2 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA3 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA4 { get; set; } // nvarchar(255)
        [Column, Nullable] public string HasLength { get; set; } // nvarchar(50)
        [Column, Nullable] public string GenericType { get; set; } // nvarchar(255)
        [PrimaryKey, Identity] public int DatatypeID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_diagram")]
    public partial class t_diagram
    {
        [PrimaryKey, Identity] public int Diagram_ID { get; set; } // int
        [Column, Nullable] public int? Package_ID { get; set; } // int
        [Column, Nullable] public int? ParentID { get; set; } // int
        [Column, Nullable] public string Diagram_Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Version { get; set; } // nvarchar(50)
        [Column, Nullable] public string Author { get; set; } // nvarchar(255)
        [Column, Nullable] public int? ShowDetails { get; set; } // int
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Stereotype { get; set; } // nvarchar(50)
        [Column, NotNull] public int AttPub { get; set; } // int
        [Column, NotNull] public int AttPri { get; set; } // int
        [Column, NotNull] public int AttPro { get; set; } // int
        [Column, Nullable] public char? Orientation { get; set; } // nvarchar(1)
        [Column, Nullable] public int? cx { get; set; } // int
        [Column, Nullable] public int? cy { get; set; } // int
        [Column, Nullable] public int? Scale { get; set; } // int
        [Column, Nullable] public DateTime? CreatedDate { get; set; } // datetime
        [Column, Nullable] public DateTime? ModifiedDate { get; set; } // datetime
        [Column, Nullable] public string HTMLPath { get; set; } // nvarchar(255)
        [Column, NotNull] public int ShowForeign { get; set; } // int
        [Column, NotNull] public int ShowBorder { get; set; } // int
        [Column, NotNull] public int ShowPackageContents { get; set; } // int
        [Column, Nullable] public string PDATA { get; set; } // nvarchar(255)
        [Column, NotNull] public int Locked { get; set; } // int
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
        [Column, Nullable] public int? TPos { get; set; } // int
        [Column, Nullable] public string Swimlanes { get; set; } // nvarchar(255)
        [Column, Nullable] public string StyleEx { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_diagramlinks")]
    public partial class t_diagramlinks
    {
        [Column, Nullable] public int? DiagramID { get; set; } // int
        [Column, Nullable] public int? ConnectorID { get; set; } // int
        [Column, Nullable] public string Geometry { get; set; } // ntext
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, NotNull] public int Hidden { get; set; } // int
        [Column, Nullable] public string Path { get; set; } // nvarchar(255)
        [PrimaryKey, Identity] public int Instance_ID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_diagramobjects")]
    public partial class t_diagramobjects
    {
        [Column, Nullable] public int? Diagram_ID { get; set; } // int
        [Column, Nullable] public int? Object_ID { get; set; } // int
        [Column, Nullable] public int? RectTop { get; set; } // int
        [Column, Nullable] public int? RectLeft { get; set; } // int
        [Column, Nullable] public int? RectRight { get; set; } // int
        [Column, Nullable] public int? RectBottom { get; set; } // int
        [Column, Nullable] public int? Sequence { get; set; } // int
        [Column, Nullable] public string ObjectStyle { get; set; } // nvarchar(255)
        [PrimaryKey, Identity] public int Instance_ID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_diagramtypes")]
    public partial class t_diagramtypes
    {
        [PrimaryKey, NotNull] public string Diagram_Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public int? Package_ID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_document")]
    public partial class t_document
    {
        [PrimaryKey, NotNull] public string DocID { get; set; } // nvarchar(40)
        [Column, NotNull] public string DocName { get; set; } // nvarchar(100)
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, NotNull] public string ElementID { get; set; } // nvarchar(40)
        [Column, NotNull] public string ElementType { get; set; } // nvarchar(50)
        [Column, Nullable] public string StrContent { get; set; } // ntext
        [Column, Nullable] public byte[] BinContent { get; set; } // image
        [Column, Nullable] public string DocType { get; set; } // nvarchar(100)
        [Column, Nullable] public string Author { get; set; } // nvarchar(255)
        [Column, Nullable] public string Version { get; set; } // nvarchar(50)
        [Column, Nullable] public int? IsActive { get; set; } // int
        [Column, Nullable] public int? Sequence { get; set; } // int
        [Column, Nullable] public DateTime? DocDate { get; set; } // datetime
    }

    [Table(Schema = "dbo", Name = "t_ecf")]
    public partial class t_ecf
    {
        [PrimaryKey, NotNull] public string ECFID { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? Weight { get; set; } // float
        [Column, Nullable] public double? Value { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_efforttypes")]
    public partial class t_efforttypes
    {
        [PrimaryKey, NotNull] public string EffortType { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(255)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_files")]
    public partial class t_files
    {
        [PrimaryKey, NotNull] public string FileID { get; set; } // nvarchar(50)
        [Column, NotNull] public string AppliesTo { get; set; } // nvarchar(50)
        [Column, NotNull] public string Category { get; set; } // nvarchar(100)
        [Column, NotNull] public string Name { get; set; } // nvarchar(150)
        [Column, Nullable] public string File { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public DateTime? FileDate { get; set; } // datetime
        [Column, Nullable] public int? FileSize { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_genopt")]
    public partial class t_genopt
    {
        [Column, Nullable] public string AppliesTo { get; set; } // nvarchar(12)
        [Column, Nullable] public string Option { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_glossary")]
    public partial class t_glossary
    {
        [Column, Nullable] public string Term { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string Meaning { get; set; } // ntext
        [PrimaryKey, Identity] public int GlossaryID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_html")]
    public partial class t_html
    {
        [Column, Nullable] public string Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Template { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_image")]
    public partial class t_image
    {
        [PrimaryKey, Identity] public int ImageID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public byte[] Image { get; set; } // image
    }

    [Table(Schema = "dbo", Name = "t_implement")]
    public partial class t_implement
    {
        [Column, Nullable] public string Type { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_issues")]
    public partial class t_issues
    {
        [Column, Nullable] public string Issue { get; set; } // nvarchar(255)
        [Column, Nullable] public DateTime? IssueDate { get; set; } // datetime
        [Column, Nullable] public string Owner { get; set; } // nvarchar(255)
        [Column, Nullable] public string Status { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Resolver { get; set; } // nvarchar(255)
        [Column, Nullable] public DateTime? DateResolved { get; set; } // datetime
        [Column, Nullable] public string Resolution { get; set; } // ntext
        [PrimaryKey, Identity] public int IssueID { get; set; } // int
        [Column, Nullable] public string Category { get; set; } // nvarchar(255)
        [Column, Nullable] public string Priority { get; set; } // nvarchar(50)
        [Column, Nullable] public string Severity { get; set; } // nvarchar(50)
        [Column, Nullable] public string IssueType { get; set; } // nvarchar(100)
    }

    [Table(Schema = "dbo", Name = "t_lists")]
    public partial class t_lists
    {
        [PrimaryKey, NotNull] public string ListID { get; set; } // nvarchar(50)
        [Column, NotNull] public string Category { get; set; } // nvarchar(100)
        [Column, NotNull] public string Name { get; set; } // nvarchar(150)
        [Column, Nullable] public int? NVal { get; set; } // int
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_mainttypes")]
    public partial class t_mainttypes
    {
        [PrimaryKey, NotNull] public string MaintType { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_method")]
    public partial class t_method
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Scope { get; set; } // nvarchar(50)
        [Column, Nullable] public string Type { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_metrictypes")]
    public partial class t_metrictypes
    {
        [PrimaryKey, NotNull] public string Metric { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_object")]
    public partial class t_object
    {
        [PrimaryKey, Identity] public int Object_ID { get; set; } // int
        [Column, Nullable] public string Object_Type { get; set; } // nvarchar(255)
        [Column, Nullable] public int? Diagram_ID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Alias { get; set; } // nvarchar(255)
        [Column, Nullable] public string Author { get; set; } // nvarchar(255)
        [Column, Nullable] public string Version { get; set; } // nvarchar(50)
        [Column, Nullable] public string Note { get; set; } // ntext
        [Column, Nullable] public int? Package_ID { get; set; } // int
        [Column, Nullable] public string Stereotype { get; set; } // nvarchar(255)
        [Column, Nullable] public int? NType { get; set; } // int
        [Column, Nullable] public string Complexity { get; set; } // nvarchar(50)
        [Column, Nullable] public int? Effort { get; set; } // int
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, Nullable] public int? Backcolor { get; set; } // int
        [Column, Nullable] public int? BorderStyle { get; set; } // int
        [Column, Nullable] public int? BorderWidth { get; set; } // int
        [Column, Nullable] public int? Fontcolor { get; set; } // int
        [Column, Nullable] public int? Bordercolor { get; set; } // int
        [Column, Nullable] public DateTime? CreatedDate { get; set; } // datetime
        [Column, Nullable] public DateTime? ModifiedDate { get; set; } // datetime
        [Column, Nullable] public string Status { get; set; } // nvarchar(50)
        [Column, Nullable] public char? Abstract { get; set; } // nvarchar(1)
        [Column, Nullable] public int? Tagged { get; set; } // int
        [Column, Nullable] public string PDATA1 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA2 { get; set; } // ntext
        [Column, Nullable] public string PDATA3 { get; set; } // ntext
        [Column, Nullable] public string PDATA4 { get; set; } // ntext
        [Column, Nullable] public string PDATA5 { get; set; } // nvarchar(255)
        [Column, Nullable] public string Concurrency { get; set; } // nvarchar(50)
        [Column, Nullable] public string Visibility { get; set; } // nvarchar(50)
        [Column, Nullable] public string Persistence { get; set; } // nvarchar(50)
        [Column, Nullable] public string Cardinality { get; set; } // nvarchar(50)
        [Column, Nullable] public string GenType { get; set; } // nvarchar(50)
        [Column, Nullable] public string GenFile { get; set; } // nvarchar(255)
        [Column, Nullable] public string Header1 { get; set; } // ntext
        [Column, Nullable] public string Header2 { get; set; } // ntext
        [Column, Nullable] public string Phase { get; set; } // nvarchar(50)
        [Column, Nullable] public string Scope { get; set; } // nvarchar(25)
        [Column, Nullable] public string GenOption { get; set; } // ntext
        [Column, Nullable] public string GenLinks { get; set; } // ntext
        [Column, Nullable] public int? Classifier { get; set; } // int
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
        [Column, Nullable] public int? ParentID { get; set; } // int
        [Column, Nullable] public string RunState { get; set; } // ntext
        [Column, Nullable] public string Classifier_guid { get; set; } // nvarchar(40)
        [Column, Nullable] public int? TPos { get; set; } // int
        [Column, NotNull] public int IsRoot { get; set; } // int
        [Column, NotNull] public int IsLeaf { get; set; } // int
        [Column, NotNull] public int IsSpec { get; set; } // int
        [Column, NotNull] public int IsActive { get; set; } // int
        [Column, Nullable] public string StateFlags { get; set; } // nvarchar(255)
        [Column, Nullable] public string PackageFlags { get; set; } // nvarchar(255)
        [Column, Nullable] public string Multiplicity { get; set; } // nvarchar(50)
        [Column, Nullable] public string StyleEx { get; set; } // ntext
        [Column, Nullable] public string EventFlags { get; set; } // ntext
        [Column, Nullable] public string ActionFlags { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_objectconstraint")]
    public partial class t_objectconstraint
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(3), NotNull] public string Constraint { get; set; } // nvarchar(255)
        [PrimaryKey(2), NotNull] public string ConstraintType { get; set; } // nvarchar(30)
        [Column, Nullable] public double? Weight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Status { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_objecteffort")]
    public partial class t_objecteffort
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Effort { get; set; } // nvarchar(255)
        [Column, Nullable] public string EffortType { get; set; } // nvarchar(12)
        [Column, Nullable] public double? EValue { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_objectfiles")]
    public partial class t_objectfiles
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string FileName { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Note { get; set; } // ntext
        [Column, Nullable] public string FileSize { get; set; } // nvarchar(255)
        [Column, Nullable] public string FileDate { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_objectmetrics")]
    public partial class t_objectmetrics
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Metric { get; set; } // nvarchar(255)
        [Column, Nullable] public string MetricType { get; set; } // nvarchar(12)
        [Column, Nullable] public double? EValue { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_objectproblems")]
    public partial class t_objectproblems
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(3), NotNull] public string Problem { get; set; } // varchar(255)
        [PrimaryKey(2), NotNull] public string ProblemType { get; set; } // varchar(255)
        [Column, Nullable] public DateTime? DateReported { get; set; } // datetime
        [Column, Nullable] public string Status { get; set; } // nvarchar(50)
        [Column, Nullable] public string ProblemNotes { get; set; } // ntext
        [Column, Nullable] public string ReportedBy { get; set; } // nvarchar(255)
        [Column, Nullable] public string ResolvedBy { get; set; } // nvarchar(255)
        [Column, Nullable] public DateTime? DateResolved { get; set; } // datetime
        [Column, Nullable] public string Version { get; set; } // nvarchar(50)
        [Column, Nullable] public string ResolverNotes { get; set; } // ntext
        [Column, Nullable] public string Priority { get; set; } // nvarchar(50)
        [Column, Nullable] public string Severity { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_objectproperties")]
    public partial class t_objectproperties
    {
        [PrimaryKey, Identity] public int PropertyID { get; set; } // int
        [Column, Nullable] public int? Object_ID { get; set; } // int
        [Column, Nullable] public string Property { get; set; } // nvarchar(255)
        [Column, Nullable] public string Value { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
    }

    [Table(Schema = "dbo", Name = "t_objectrequires")]
    public partial class t_objectrequires
    {
        [PrimaryKey, Identity] public int ReqID { get; set; } // int
        [Column, Nullable] public int? Object_ID { get; set; } // int
        [Column, Nullable] public string Requirement { get; set; } // nvarchar(255)
        [Column, Nullable] public string ReqType { get; set; } // nvarchar(255)
        [Column, Nullable] public string Status { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Stability { get; set; } // nvarchar(50)
        [Column, Nullable] public string Difficulty { get; set; } // nvarchar(50)
        [Column, Nullable] public string Priority { get; set; } // nvarchar(50)
        [Column, Nullable] public DateTime? LastUpdate { get; set; } // datetime
    }

    [Table(Schema = "dbo", Name = "t_objectresource")]
    public partial class t_objectresource
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Resource { get; set; } // varchar(255)
        [PrimaryKey(3), NotNull] public string Role { get; set; } // varchar(255)
        [Column, Nullable] public double? Time { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public short? PercentComplete { get; set; } // smallint
        [Column, Nullable] public DateTime? DateStart { get; set; } // datetime
        [Column, Nullable] public DateTime? DateEnd { get; set; } // datetime
        [Column, Nullable] public string History { get; set; } // ntext
        [Column, Nullable] public int? ExpectedHours { get; set; } // int
        [Column, Nullable] public int? ActualHours { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_objectrisks")]
    public partial class t_objectrisks
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Risk { get; set; } // nvarchar(255)
        [Column, Nullable] public string RiskType { get; set; } // nvarchar(12)
        [Column, Nullable] public double? EValue { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_objectscenarios")]
    public partial class t_objectscenarios
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Scenario { get; set; } // nvarchar(255)
        [Column, Nullable] public string ScenarioType { get; set; } // nvarchar(12)
        [Column, Nullable] public double? EValue { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string XMLContent { get; set; } // ntext
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
    }

    [Table(Schema = "dbo", Name = "t_objecttests")]
    public partial class t_objecttests
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Test { get; set; } // nvarchar(255)
        [PrimaryKey(3), NotNull] public int TestClass { get; set; } // int
        [Column, Nullable] public string TestType { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string InputData { get; set; } // ntext
        [Column, Nullable] public string AcceptanceCriteria { get; set; } // ntext
        [Column, Nullable] public string Status { get; set; } // nvarchar(32)
        [Column, Nullable] public DateTime? DateRun { get; set; } // datetime
        [Column, Nullable] public string Results { get; set; } // ntext
        [Column, Nullable] public string RunBy { get; set; } // nvarchar(255)
        [Column, Nullable] public string CheckBy { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_objecttrx")]
    public partial class t_objecttrx
    {
        [PrimaryKey(1), NotNull] public int Object_ID { get; set; } // int
        [PrimaryKey(3), NotNull] public string TRX { get; set; } // nvarchar(255)
        [PrimaryKey(2), NotNull] public string TRXType { get; set; } // nvarchar(12)
        [Column, Nullable] public double? Weight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_objecttypes")]
    public partial class t_objecttypes
    {
        [PrimaryKey, NotNull] public string Object_Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Description { get; set; } // nvarchar(255)
        [Column, NotNull] public int DesignObject { get; set; } // int
        [Column, Nullable] public int? ImageID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_ocf")]
    public partial class t_ocf
    {
        [Column, Nullable] public string ObjectType { get; set; } // nvarchar(50)
        [Column, Nullable] public double? ComplexityWeight { get; set; } // float
    }

    [Table(Schema = "dbo", Name = "t_operation")]
    public partial class t_operation
    {
        [PrimaryKey, Identity] public int OperationID { get; set; } // int
        [Column, Nullable] public int? Object_ID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Scope { get; set; } // nvarchar(50)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public char? ReturnArray { get; set; } // nvarchar(1)
        [Column, Nullable] public string Stereotype { get; set; } // nvarchar(50)
        [Column, Nullable] public char? IsStatic { get; set; } // nvarchar(1)
        [Column, Nullable] public string Concurrency { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Behaviour { get; set; } // ntext
        [Column, Nullable] public char? Abstract { get; set; } // nvarchar(1)
        [Column, Nullable] public string GenOption { get; set; } // ntext
        [Column, Nullable] public char? Synchronized { get; set; } // nvarchar(1)
        [Column, Nullable] public int? Pos { get; set; } // int
        [Column, Nullable] public int? Const { get; set; } // int
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, NotNull] public int Pure { get; set; } // int
        [Column, Nullable] public string Throws { get; set; } // nvarchar(255)
        [Column, Nullable] public string Classifier { get; set; } // nvarchar(50)
        [Column, Nullable] public string Code { get; set; } // ntext
        [Column, NotNull] public int IsRoot { get; set; } // int
        [Column, NotNull] public int IsLeaf { get; set; } // int
        [Column, NotNull] public int IsQuery { get; set; } // int
        [Column, Nullable] public string StateFlags { get; set; } // nvarchar(255)
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(50)
        [Column, Nullable] public string StyleEx { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_operationparams")]
    public partial class t_operationparams
    {
        [PrimaryKey(1), NotNull] public int OperationID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string Default { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public int? Pos { get; set; } // int
        [Column, NotNull] public int Const { get; set; } // int
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, Nullable] public string Kind { get; set; } // nvarchar(12)
        [Column, Nullable] public string Classifier { get; set; } // nvarchar(50)
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(50)
        [Column, Nullable] public string StyleEx { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_operationposts")]
    public partial class t_operationposts
    {
        [PrimaryKey(1), NotNull] public int OperationID { get; set; } // int
        [PrimaryKey(2), NotNull] public string PostCondition { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_operationpres")]
    public partial class t_operationpres
    {
        [PrimaryKey(1), NotNull] public int OperationID { get; set; } // int
        [PrimaryKey(2), NotNull] public string PreCondition { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_operationtag")]
    public partial class t_operationtag
    {
        [PrimaryKey, Identity] public int PropertyID { get; set; } // int
        [Column, Nullable] public int? ElementID { get; set; } // int
        [Column, Nullable] public string Property { get; set; } // nvarchar(255)
        [Column, Nullable] public string VALUE { get; set; } // nvarchar(255)
        [Column, Nullable] public string NOTES { get; set; } // ntext
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
    }

    [Table(Schema = "dbo", Name = "t_package")]
    public partial class t_package
    {
        [PrimaryKey, Identity] public int Package_ID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public int? Parent_ID { get; set; } // int
        [Column, Nullable] public DateTime? CreatedDate { get; set; } // datetime
        [Column, Nullable] public DateTime? ModifiedDate { get; set; } // datetime
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(40)
        [Column, Nullable] public string XMLPath { get; set; } // nvarchar(255)
        [Column, NotNull] public int IsControlled { get; set; } // int
        [Column, Nullable] public DateTime? LastLoadDate { get; set; } // datetime
        [Column, Nullable] public DateTime? LastSaveDate { get; set; } // datetime
        [Column, Nullable] public string Version { get; set; } // nvarchar(50)
        [Column, NotNull] public int Protected { get; set; } // int
        [Column, Nullable] public string PkgOwner { get; set; } // nvarchar(255)
        [Column, Nullable] public string UMLVersion { get; set; } // nvarchar(50)
        [Column, NotNull] public int UseDTD { get; set; } // int
        [Column, NotNull] public int LogXML { get; set; } // int
        [Column, Nullable] public string CodePath { get; set; } // nvarchar(255)
        [Column, Nullable] public string Namespace { get; set; } // nvarchar(50)
        [Column, Nullable] public int? TPos { get; set; } // int
        [Column, Nullable] public string PackageFlags { get; set; } // nvarchar(255)
        [Column, Nullable] public int? BatchSave { get; set; } // int
        [Column, Nullable] public int? BatchLoad { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_palette")]
    public partial class t_palette
    {
        [Identity] public int PaletteID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_paletteitem")]
    public partial class t_paletteitem
    {
        [Column, Nullable] public int? PaletteID { get; set; } // int
        [Column, Nullable] public int? ItemID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_phase")]
    public partial class t_phase
    {
        [PrimaryKey, NotNull] public string PhaseID { get; set; } // varchar(40)
        [Column, NotNull] public string PhaseName { get; set; } // varchar(100)
        [Column, Nullable] public string PhaseNotes { get; set; } // ntext
        [Column, Nullable] public string PhaseStyle { get; set; } // varchar(255)
        [Column, Nullable] public DateTime? StartDate { get; set; } // datetime
        [Column, Nullable] public DateTime? EndDate { get; set; } // datetime
        [Column, Nullable] public string PhaseContent { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_primitives")]
    public partial class t_primitives
    {
        [PrimaryKey, NotNull] public string Datatype { get; set; } // nvarchar(50)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_problemtypes")]
    public partial class t_problemtypes
    {
        [PrimaryKey, NotNull] public string ProblemType { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(255)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_projectroles")]
    public partial class t_projectroles
    {
        [PrimaryKey, NotNull] public string Role { get; set; } // nvarchar(255)
        [Column, Nullable] public string Description { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_propertytypes")]
    public partial class t_propertytypes
    {
        [PrimaryKey, NotNull] public string Property { get; set; } // nvarchar(50)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_requiretypes")]
    public partial class t_requiretypes
    {
        [PrimaryKey, NotNull] public string Requirement { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_resources")]
    public partial class t_resources
    {
        [PrimaryKey, NotNull] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Organisation { get; set; } // nvarchar(255)
        [Column, Nullable] public string Phone1 { get; set; } // nvarchar(50)
        [Column, Nullable] public string Phone2 { get; set; } // nvarchar(50)
        [Column, Nullable] public string Mobile { get; set; } // nvarchar(50)
        [Column, Nullable] public string Fax { get; set; } // nvarchar(50)
        [Column, Nullable] public string Email { get; set; } // nvarchar(255)
        [Column, Nullable] public string Roles { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_risktypes")]
    public partial class t_risktypes
    {
        [PrimaryKey, NotNull] public string Risk { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_roleconstraint")]
    public partial class t_roleconstraint
    {
        [PrimaryKey(1), NotNull] public int ConnectorID { get; set; } // int
        [PrimaryKey(2), NotNull] public string Constraint { get; set; } // nvarchar(255)
        [PrimaryKey(3), NotNull] public string ConnectorEnd { get; set; } // nvarchar(50)
        [PrimaryKey(4), NotNull] public string ConstraintType { get; set; } // nvarchar(12)
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_rtf")]
    public partial class t_rtf
    {
        [Column, Nullable] public string Type { get; set; } // nvarchar(50)
        [Column, Nullable] public string Template { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_rtfreport")]
    public partial class t_rtfreport
    {
        [PrimaryKey, NotNull] public string TemplateID { get; set; } // nvarchar(200)
        [Column, Nullable] public int? RootPackage { get; set; } // int
        [Column, Nullable] public string Filename { get; set; } // nvarchar(255)
        [Column, NotNull] public int Details { get; set; } // int
        [Column, NotNull] public int ProcessChildren { get; set; } // int
        [Column, NotNull] public int ShowDiagrams { get; set; } // int
        [Column, Nullable] public string Heading { get; set; } // nvarchar(255)
        [Column, NotNull] public int Requirements { get; set; } // int
        [Column, NotNull] public int Associations { get; set; } // int
        [Column, NotNull] public int Scenarios { get; set; } // int
        [Column, NotNull] public int ChildDiagrams { get; set; } // int
        [Column, NotNull] public int Attributes { get; set; } // int
        [Column, NotNull] public int Methods { get; set; } // int
        [Column, Nullable] public int? ImageType { get; set; } // int
        [Column, NotNull] public int Paging { get; set; } // int
        [Column, Nullable] public string Intro { get; set; } // ntext
        [Column, NotNull] public int Resources { get; set; } // int
        [Column, NotNull] public int Constraints { get; set; } // int
        [Column, NotNull] public int Tagged { get; set; } // int
        [Column, NotNull] public int ShowTag { get; set; } // int
        [Column, NotNull] public int ShowAlias { get; set; } // int
        [Column, Nullable] public string PDATA1 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA2 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA3 { get; set; } // nvarchar(255)
        [Column, Nullable] public string PDATA4 { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_rules")]
    public partial class t_rules
    {
        [PrimaryKey, NotNull] public string RuleID { get; set; } // nvarchar(50)
        [Column, NotNull] public string RuleName { get; set; } // nvarchar(255)
        [Column, NotNull] public string RuleType { get; set; } // nvarchar(255)
        [Column, Nullable] public int? RuleActive { get; set; } // int
        [Column, Nullable] public string ErrorMsg { get; set; } // nvarchar(255)
        [Column, Nullable] public string Flags { get; set; } // nvarchar(255)
        [Column, Nullable] public string RuleOCL { get; set; } // ntext
        [Column, Nullable] public string RuleXML { get; set; } // ntext
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_scenariotypes")]
    public partial class t_scenariotypes
    {
        [PrimaryKey, NotNull] public string ScenarioType { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_script")]
    public partial class t_script
    {
        [Identity] public int ScriptID { get; set; } // int
        [Column, Nullable] public string ScriptCategory { get; set; } // nvarchar(100)
        [Column, Nullable] public string ScriptName { get; set; } // nvarchar(150)
        [Column, Nullable] public string ScriptAuthor { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Script { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_secgroup")]
    public partial class t_secgroup
    {
        [PrimaryKey, NotNull] public string GroupID { get; set; } // nvarchar(40)
        [Column, NotNull] public string GroupName { get; set; } // nvarchar(32)
        [Column, Nullable] public string Description { get; set; } // nvarchar(100)
    }

    [Table(Schema = "dbo", Name = "t_secgrouppermission")]
    public partial class t_secgrouppermission
    {
        [PrimaryKey(1), NotNull] public string GroupID { get; set; } // nvarchar(40)
        [PrimaryKey(2), NotNull] public int PermissionID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_seclocks")]
    public partial class t_seclocks
    {
        [Column, NotNull] public string UserID { get; set; } // nvarchar(40)
        [Column, Nullable] public string GroupID { get; set; } // nvarchar(40)
        [Column, NotNull] public string EntityType { get; set; } // nvarchar(32)
        [PrimaryKey, NotNull] public string EntityID { get; set; } // nvarchar(40)
        [Column, NotNull] public DateTime Timestamp { get; set; } // datetime
        [Column, Nullable] public string LockType { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_secpermission")]
    public partial class t_secpermission
    {
        [PrimaryKey, NotNull] public int PermissionID { get; set; } // int
        [Column, NotNull] public string PermissionName { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_secpolicies")]
    public partial class t_secpolicies
    {
        [PrimaryKey, NotNull] public string Property { get; set; } // nvarchar(100)
        [Column, NotNull] public string Value { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_secuser")]
    public partial class t_secuser
    {
        [PrimaryKey, NotNull] public string UserID { get; set; } // nvarchar(40)
        [Column, NotNull] public string UserLogin { get; set; } // nvarchar(32)
        [Column, NotNull] public string FirstName { get; set; } // nvarchar(50)
        [Column, NotNull] public string Surname { get; set; } // nvarchar(50)
        [Column, Nullable] public string Department { get; set; } // nvarchar(50)
        [Column, Nullable] public string Password { get; set; } // nvarchar(12)
    }

    [Table(Schema = "dbo", Name = "t_secusergroup")]
    public partial class t_secusergroup
    {
        [PrimaryKey(1), NotNull] public string UserID { get; set; } // nvarchar(40)
        [PrimaryKey(2), NotNull] public string GroupID { get; set; } // nvarchar(40)
    }

    [Table(Schema = "dbo", Name = "t_secuserpermission")]
    public partial class t_secuserpermission
    {
        [PrimaryKey(1), NotNull] public string UserID { get; set; } // nvarchar(40)
        [PrimaryKey(2), NotNull] public int PermissionID { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "t_snapshot")]
    public partial class t_snapshot
    {
        [PrimaryKey, NotNull] public string SnapshotID { get; set; } // nvarchar(40)
        [Column, Nullable] public string SeriesID { get; set; } // nvarchar(40)
        [Column, NotNull] public int Position { get; set; } // int
        [Column, NotNull] public string SnapshotName { get; set; } // nvarchar(100)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, Nullable] public string ElementID { get; set; } // nvarchar(40)
        [Column, NotNull] public string ElementType { get; set; } // nvarchar(50)
        [Column, Nullable] public string StrContent { get; set; } // ntext
        [Column, Nullable] public byte[] BinContent1 { get; set; } // image
        [Column, Nullable] public byte[] BinContent2 { get; set; } // image
    }

    [Table(Schema = "dbo", Name = "t_statustypes")]
    public partial class t_statustypes
    {
        [Column, Nullable] public string Status { get; set; } // nvarchar(50)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_stereotypes")]
    public partial class t_stereotypes
    {
        [PrimaryKey(2), NotNull] public string Stereotype { get; set; } // varchar(255)
        [PrimaryKey(1), NotNull] public string AppliesTo { get; set; } // varchar(255)
        [Column, Nullable] public string Description { get; set; } // nvarchar(255)
        [Column, NotNull] public int MFEnabled { get; set; } // int
        [Column, Nullable] public string MFPath { get; set; } // nvarchar(255)
        [Column, Nullable] public byte[] Metafile { get; set; } // image
        [Column, Nullable] public string Style { get; set; } // ntext
        [Column, Nullable] public string ea_guid { get; set; } // nvarchar(50)
        [Column, Nullable] public string VisualType { get; set; } // varchar(100)
    }

    [Table(Schema = "dbo", Name = "t_taggedvalue")]
    public partial class t_taggedvalue
    {
        [PrimaryKey, NotNull] public string PropertyID { get; set; } // nvarchar(40)
        [Column, Nullable] public string ElementID { get; set; } // nvarchar(40)
        [Column, NotNull] public string BaseClass { get; set; } // nvarchar(100)
        [Column, Nullable] public string TagValue { get; set; } // ntext
        [Column, Nullable] public string Notes { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_tasks")]
    public partial class t_tasks
    {
        [PrimaryKey, Identity] public int TaskID { get; set; } // int
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string TaskType { get; set; } // nvarchar(255)
        [Column, Nullable] public string NOTES { get; set; } // ntext
        [Column, Nullable] public string Priority { get; set; } // nvarchar(255)
        [Column, Nullable] public string Status { get; set; } // nvarchar(255)
        [Column, Nullable] public string Owner { get; set; } // nvarchar(255)
        [Column, Nullable] public DateTime? StartDate { get; set; } // datetime
        [Column, Nullable] public DateTime? EndDate { get; set; } // datetime
        [Column, Nullable] public string Phase { get; set; } // nvarchar(50)
        [Column, Nullable] public string History { get; set; } // ntext
        [Column, Nullable] public int? Percent { get; set; } // int
        [Column, Nullable] public int? TotalTime { get; set; } // int
        [Column, Nullable] public int? ActualTime { get; set; } // int
        [Column, Nullable] public string AssignedTo { get; set; } // nvarchar(100)
    }

    [Table(Schema = "dbo", Name = "t_tcf")]
    public partial class t_tcf
    {
        [PrimaryKey, NotNull] public string TCFID { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? Weight { get; set; } // float
        [Column, Nullable] public double? Value { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_template")]
    public partial class t_template
    {
        [PrimaryKey, NotNull] public string TemplateID { get; set; } // nvarchar(40)
        [Column, NotNull] public string TemplateType { get; set; } // nvarchar(50)
        [Column, NotNull] public string TemplateName { get; set; } // nvarchar(100)
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
        [Column, Nullable] public string Style { get; set; } // nvarchar(255)
        [Column, Nullable] public string Template { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_testclass")]
    public partial class t_testclass
    {
        [PrimaryKey, NotNull] public string TestClass { get; set; } // nvarchar(50)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_testplans")]
    public partial class t_testplans
    {
        [PrimaryKey, NotNull] public string PlanID { get; set; } // nvarchar(50)
        [Column, NotNull] public string Category { get; set; } // nvarchar(100)
        [Column, NotNull] public string Name { get; set; } // nvarchar(150)
        [Column, NotNull] public string Author { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, NotNull] public string TestPlan { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_testtypes")]
    public partial class t_testtypes
    {
        [PrimaryKey, NotNull] public string TestType { get; set; } // nvarchar(12)
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_trxtypes")]
    public partial class t_trxtypes
    {
        [Column, Nullable] public string Description { get; set; } // nvarchar(50)
        [Column, Nullable] public double? NumericWeight { get; set; } // float
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string TRX { get; set; } // nvarchar(255)
        [PrimaryKey, Identity] public int TRX_ID { get; set; } // int
        [Column, Nullable] public string Style { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_umlpattern")]
    public partial class t_umlpattern
    {
        [PrimaryKey, Identity] public int PatternID { get; set; } // int
        [Column, Nullable] public string PatternCategory { get; set; } // nvarchar(100)
        [Column, Nullable] public string PatternName { get; set; } // nvarchar(150)
        [Column, Nullable] public string Style { get; set; } // nvarchar(250)
        [Column, Nullable] public string Notes { get; set; } // ntext
        [Column, Nullable] public string PatternXML { get; set; } // ntext
        [Column, Nullable] public string Version { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_version")]
    public partial class t_version
    {
        [PrimaryKey(1), NotNull] public string ElementID { get; set; } // nvarchar(50)
        [PrimaryKey(2), NotNull] public string VersionID { get; set; } // nvarchar(255)
        [Column, Nullable] public string ElementType { get; set; } // nvarchar(100)
        [Column, Nullable] public string Flags { get; set; } // nvarchar(255)
        [Column, Nullable] public string ExternalFile { get; set; } // nvarchar(255)
        [Column, Nullable] public string Notes { get; set; } // nvarchar(255)
        [Column, Nullable] public string Owner { get; set; } // nvarchar(255)
        [Column, Nullable] public DateTime? VersionDate { get; set; } // datetime
        [Column, Nullable] public string Branch { get; set; } // nvarchar(255)
        [Column, Nullable] public string ElementXML { get; set; } // ntext
    }

    [Table(Schema = "dbo", Name = "t_xref")]
    public partial class t_xref
    {
        [PrimaryKey, NotNull] public string XrefID { get; set; } // nvarchar(255)
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string Visibility { get; set; } // nvarchar(255)
        [Column, Nullable] public string Namespace { get; set; } // nvarchar(255)
        [Column, Nullable] public string Requirement { get; set; } // nvarchar(255)
        [Column, Nullable] public string Constraint { get; set; } // nvarchar(255)
        [Column, Nullable] public string Behavior { get; set; } // nvarchar(255)
        [Column, Nullable] public string Partition { get; set; } // nvarchar(255)
        [Column, Nullable] public string Description { get; set; } // ntext
        [Column, Nullable] public string Client { get; set; } // nvarchar(255)
        [Column, Nullable] public string Supplier { get; set; } // nvarchar(255)
        [Column, Nullable] public string Link { get; set; } // nvarchar(255)
    }

    [Table(Schema = "dbo", Name = "t_xrefsystem")]
    public partial class t_xrefsystem
    {
        [PrimaryKey, NotNull] public string XrefID { get; set; } // nvarchar(255)
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string Visibility { get; set; } // nvarchar(255)
        [Column, Nullable] public string Namespace { get; set; } // nvarchar(255)
        [Column, Nullable] public string Requirement { get; set; } // nvarchar(255)
        [Column, Nullable] public string Constraint { get; set; } // nvarchar(255)
        [Column, Nullable] public string Behavior { get; set; } // nvarchar(255)
        [Column, Nullable] public string Partition { get; set; } // nvarchar(255)
        [Column, Nullable] public string Description { get; set; } // ntext
        [Column, Nullable] public string Client { get; set; } // nvarchar(255)
        [Column, Nullable] public string Supplier { get; set; } // nvarchar(255)
        [Column, Nullable] public string Link { get; set; } // nvarchar(255)
        [Column, Nullable] public string ToolID { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "t_xrefuser")]
    public partial class t_xrefuser
    {
        [PrimaryKey, NotNull] public string XrefID { get; set; } // nvarchar(255)
        [Column, Nullable] public string Name { get; set; } // nvarchar(255)
        [Column, Nullable] public string Type { get; set; } // nvarchar(255)
        [Column, Nullable] public string Visibility { get; set; } // nvarchar(255)
        [Column, Nullable] public string Namespace { get; set; } // nvarchar(255)
        [Column, Nullable] public string Requirement { get; set; } // nvarchar(255)
        [Column, Nullable] public string Constraint { get; set; } // nvarchar(255)
        [Column, Nullable] public string Behavior { get; set; } // nvarchar(255)
        [Column, Nullable] public string Partition { get; set; } // nvarchar(255)
        [Column, Nullable] public string Description { get; set; } // ntext
        [Column, Nullable] public string Client { get; set; } // nvarchar(255)
        [Column, Nullable] public string Supplier { get; set; } // nvarchar(255)
        [Column, Nullable] public string Link { get; set; } // nvarchar(255)
        [Column, Nullable] public string ToolID { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "usys_system")]
    public partial class usys_system
    {
        [PrimaryKey, NotNull] public string Property { get; set; } // nvarchar(50)
        [Column, Nullable] public string Value { get; set; } // nvarchar(50)
    }

    [Table(Schema = "dbo", Name = "usysOldTables")]
    public partial class usysOldTable
    {
        [Column, Nullable] public string TableName { get; set; } // nvarchar(50)
        [Column, Nullable] public string NewName { get; set; } // nvarchar(50)
        [Column, Nullable] public int? RelOrder { get; set; } // int
        [Column, NotNull] public int FixCode { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "usysQueries")]
    public partial class usysQuery
    {
        [Column, Nullable] public string QueryName { get; set; } // nvarchar(50)
        [Column, Nullable] public string NewName { get; set; } // nvarchar(50)
        [Column, NotNull] public int FixCode { get; set; } // int
    }

    [Table(Schema = "dbo", Name = "usysTables")]
    public partial class usysTable
    {
        [PrimaryKey, NotNull] public string TableName { get; set; } // nvarchar(50)
        [Column, Nullable] public int? RelOrder { get; set; } // int
        [Column, Nullable] public string DisplayName { get; set; } // nvarchar(50)
        [Column, Nullable] public string FromVer { get; set; } // nvarchar(50)
        [Column, Nullable] public string ToVer { get; set; } // nvarchar(50)
    }

    public static partial class EaSqlServerDataModelStoredProcedures
    {
        #region sp_creatediagram

        public static int sp_creatediagram(this DataConnection dataConnection, string @diagramname, int? @owner_id, int? @version, byte[] @definition)
        {
            return dataConnection.ExecuteProc("[dbo].[sp_creatediagram]",
                new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
                new DataParameter("@owner_id", @owner_id, DataType.Int32),
                new DataParameter("@version", @version, DataType.Int32),
                new DataParameter("@definition", @definition, DataType.VarBinary));
        }

        #endregion

        #region sp_dropdiagram

        public static int sp_dropdiagram(this DataConnection dataConnection, string @diagramname, int? @owner_id)
        {
            return dataConnection.ExecuteProc("[dbo].[sp_dropdiagram]",
                new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
                new DataParameter("@owner_id", @owner_id, DataType.Int32));
        }

        #endregion

        #region sp_helpdiagrams

        public static IEnumerable<sp_helpdiagramsResult> sp_helpdiagrams(this DataConnection dataConnection, string @diagramname, int? @owner_id)
        {
            return dataConnection.QueryProc<sp_helpdiagramsResult>("[dbo].[sp_helpdiagrams]",
                new DataParameter("@diagramname", @diagramname, DataType.NVarChar),
                new DataParameter("@owner_id", @owner_id, DataType.Int32));
        }

        public partial class sp_helpdiagramsResult
        {
            public string Database { get; set; }
            public string Name { get; set; }
            public int ID { get; set; }
            public string Owner { get; set; }
            public int OwnerID { get; set; }
        }

        #endregion

        #region sp_upgraddiagrams

        public static int sp_upgraddiagrams(this DataConnection dataConnection)
        {
            return dataConnection.ExecuteProc("[dbo].[sp_upgraddiagrams]");
        }

        #endregion
    }

    public static partial class SqlFunctions
    {
        #region fn_diagramobjects

        [Sql.Function(Name = "dbo.fn_diagramobjects", ServerSideOnly = true)]
        public static int? fn_diagramobjects()
        {
            throw new InvalidOperationException();
        }

        #endregion
    }

    public static partial class TableExtensions
    {
        public static t_attribute Find(this ITable<t_attribute> table, int ID)
        {
            return table.FirstOrDefault(t =>
                t.ID == ID);
        }

        public static t_attributeconstraints Find(this ITable<t_attributeconstraints> table, string Constraint, int ID)
        {
            return table.FirstOrDefault(t =>
                t.Constraint == Constraint &&
                t.ID == ID);
        }

        public static t_attributetag Find(this ITable<t_attributetag> table, int PropertyID)
        {
            return table.FirstOrDefault(t =>
                t.PropertyID == PropertyID);
        }

        public static t_authors Find(this ITable<t_authors> table, string AuthorName)
        {
            return table.FirstOrDefault(t =>
                t.AuthorName == AuthorName);
        }

        public static t_cardinality Find(this ITable<t_cardinality> table, string Cardinality)
        {
            return table.FirstOrDefault(t =>
                t.Cardinality == Cardinality);
        }

        public static t_category Find(this ITable<t_category> table, int CategoryID)
        {
            return table.FirstOrDefault(t =>
                t.CategoryID == CategoryID);
        }

        public static t_clients Find(this ITable<t_clients> table, string Name)
        {
            return table.FirstOrDefault(t =>
                t.Name == Name);
        }

        public static t_complexitytypes Find(this ITable<t_complexitytypes> table, string Complexity)
        {
            return table.FirstOrDefault(t =>
                t.Complexity == Complexity);
        }

        public static t_connector Find(this ITable<t_connector> table, int Connector_ID)
        {
            return table.FirstOrDefault(t =>
                t.Connector_ID == Connector_ID);
        }

        public static t_connectorconstraint Find(this ITable<t_connectorconstraint> table, int ConnectorID, string Constraint)
        {
            return table.FirstOrDefault(t =>
                t.ConnectorID == ConnectorID &&
                t.Constraint == Constraint);
        }

        public static t_connectortag Find(this ITable<t_connectortag> table, int PropertyID)
        {
            return table.FirstOrDefault(t =>
                t.PropertyID == PropertyID);
        }

        public static t_connectortypes Find(this ITable<t_connectortypes> table, string Connector_Type)
        {
            return table.FirstOrDefault(t =>
                t.Connector_Type == Connector_Type);
        }

        public static t_constants Find(this ITable<t_constants> table, string ConstantName)
        {
            return table.FirstOrDefault(t =>
                t.ConstantName == ConstantName);
        }

        public static t_constrainttypes Find(this ITable<t_constrainttypes> table, string Constraint)
        {
            return table.FirstOrDefault(t =>
                t.Constraint == Constraint);
        }

        public static t_datatypes Find(this ITable<t_datatypes> table, int DatatypeID)
        {
            return table.FirstOrDefault(t =>
                t.DatatypeID == DatatypeID);
        }

        public static t_diagram Find(this ITable<t_diagram> table, int Diagram_ID)
        {
            return table.FirstOrDefault(t =>
                t.Diagram_ID == Diagram_ID);
        }

        public static t_diagramlinks Find(this ITable<t_diagramlinks> table, int Instance_ID)
        {
            return table.FirstOrDefault(t =>
                t.Instance_ID == Instance_ID);
        }

        public static t_diagramobjects Find(this ITable<t_diagramobjects> table, int Instance_ID)
        {
            return table.FirstOrDefault(t =>
                t.Instance_ID == Instance_ID);
        }

        public static t_diagramtypes Find(this ITable<t_diagramtypes> table, string Diagram_Type)
        {
            return table.FirstOrDefault(t =>
                t.Diagram_Type == Diagram_Type);
        }

        public static t_document Find(this ITable<t_document> table, string DocID)
        {
            return table.FirstOrDefault(t =>
                t.DocID == DocID);
        }

        public static t_ecf Find(this ITable<t_ecf> table, string ECFID)
        {
            return table.FirstOrDefault(t =>
                t.ECFID == ECFID);
        }

        public static t_efforttypes Find(this ITable<t_efforttypes> table, string EffortType)
        {
            return table.FirstOrDefault(t =>
                t.EffortType == EffortType);
        }

        public static t_files Find(this ITable<t_files> table, string FileID)
        {
            return table.FirstOrDefault(t =>
                t.FileID == FileID);
        }

        public static t_glossary Find(this ITable<t_glossary> table, int GlossaryID)
        {
            return table.FirstOrDefault(t =>
                t.GlossaryID == GlossaryID);
        }

        public static t_image Find(this ITable<t_image> table, int ImageID)
        {
            return table.FirstOrDefault(t =>
                t.ImageID == ImageID);
        }

        public static t_issues Find(this ITable<t_issues> table, int IssueID)
        {
            return table.FirstOrDefault(t =>
                t.IssueID == IssueID);
        }

        public static t_lists Find(this ITable<t_lists> table, string ListID)
        {
            return table.FirstOrDefault(t =>
                t.ListID == ListID);
        }

        public static t_mainttypes Find(this ITable<t_mainttypes> table, string MaintType)
        {
            return table.FirstOrDefault(t =>
                t.MaintType == MaintType);
        }

        public static t_method Find(this ITable<t_method> table, int Object_ID, string Name)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Name == Name);
        }

        public static t_metrictypes Find(this ITable<t_metrictypes> table, string Metric)
        {
            return table.FirstOrDefault(t =>
                t.Metric == Metric);
        }

        public static t_object Find(this ITable<t_object> table, int Object_ID)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID);
        }

        public static t_objectconstraint Find(this ITable<t_objectconstraint> table, int Object_ID, string Constraint, string ConstraintType)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Constraint == Constraint &&
                t.ConstraintType == ConstraintType);
        }

        public static t_objecteffort Find(this ITable<t_objecteffort> table, int Object_ID, string Effort)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Effort == Effort);
        }

        public static t_objectfiles Find(this ITable<t_objectfiles> table, int Object_ID, string FileName)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.FileName == FileName);
        }

        public static t_objectmetrics Find(this ITable<t_objectmetrics> table, int Object_ID, string Metric)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Metric == Metric);
        }

        public static t_objectproblems Find(this ITable<t_objectproblems> table, int Object_ID, string Problem, string ProblemType)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Problem == Problem &&
                t.ProblemType == ProblemType);
        }

        public static t_objectproperties Find(this ITable<t_objectproperties> table, int PropertyID)
        {
            return table.FirstOrDefault(t =>
                t.PropertyID == PropertyID);
        }

        public static t_objectrequires Find(this ITable<t_objectrequires> table, int ReqID)
        {
            return table.FirstOrDefault(t =>
                t.ReqID == ReqID);
        }

        public static t_objectresource Find(this ITable<t_objectresource> table, int Object_ID, string Resource, string Role)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Resource == Resource &&
                t.Role == Role);
        }

        public static t_objectrisks Find(this ITable<t_objectrisks> table, int Object_ID, string Risk)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Risk == Risk);
        }

        public static t_objectscenarios Find(this ITable<t_objectscenarios> table, int Object_ID, string Scenario)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Scenario == Scenario);
        }

        public static t_objecttests Find(this ITable<t_objecttests> table, int Object_ID, string Test, int TestClass)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.Test == Test &&
                t.TestClass == TestClass);
        }

        public static t_objecttrx Find(this ITable<t_objecttrx> table, int Object_ID, string TRX, string TRXType)
        {
            return table.FirstOrDefault(t =>
                t.Object_ID == Object_ID &&
                t.TRX == TRX &&
                t.TRXType == TRXType);
        }

        public static t_objecttypes Find(this ITable<t_objecttypes> table, string Object_Type)
        {
            return table.FirstOrDefault(t =>
                t.Object_Type == Object_Type);
        }

        public static t_operation Find(this ITable<t_operation> table, int OperationID)
        {
            return table.FirstOrDefault(t =>
                t.OperationID == OperationID);
        }

        public static t_operationparams Find(this ITable<t_operationparams> table, int OperationID, string Name)
        {
            return table.FirstOrDefault(t =>
                t.OperationID == OperationID &&
                t.Name == Name);
        }

        public static t_operationposts Find(this ITable<t_operationposts> table, int OperationID, string PostCondition)
        {
            return table.FirstOrDefault(t =>
                t.OperationID == OperationID &&
                t.PostCondition == PostCondition);
        }

        public static t_operationpres Find(this ITable<t_operationpres> table, int OperationID, string PreCondition)
        {
            return table.FirstOrDefault(t =>
                t.OperationID == OperationID &&
                t.PreCondition == PreCondition);
        }

        public static t_operationtag Find(this ITable<t_operationtag> table, int PropertyID)
        {
            return table.FirstOrDefault(t =>
                t.PropertyID == PropertyID);
        }

        public static t_package Find(this ITable<t_package> table, int Package_ID)
        {
            return table.FirstOrDefault(t =>
                t.Package_ID == Package_ID);
        }

        public static t_phase Find(this ITable<t_phase> table, string PhaseID)
        {
            return table.FirstOrDefault(t =>
                t.PhaseID == PhaseID);
        }

        public static t_primitives Find(this ITable<t_primitives> table, string Datatype)
        {
            return table.FirstOrDefault(t =>
                t.Datatype == Datatype);
        }

        public static t_problemtypes Find(this ITable<t_problemtypes> table, string ProblemType)
        {
            return table.FirstOrDefault(t =>
                t.ProblemType == ProblemType);
        }

        public static t_projectroles Find(this ITable<t_projectroles> table, string Role)
        {
            return table.FirstOrDefault(t =>
                t.Role == Role);
        }

        public static t_propertytypes Find(this ITable<t_propertytypes> table, string Property)
        {
            return table.FirstOrDefault(t =>
                t.Property == Property);
        }

        public static t_requiretypes Find(this ITable<t_requiretypes> table, string Requirement)
        {
            return table.FirstOrDefault(t =>
                t.Requirement == Requirement);
        }

        public static t_resources Find(this ITable<t_resources> table, string Name)
        {
            return table.FirstOrDefault(t =>
                t.Name == Name);
        }

        public static t_risktypes Find(this ITable<t_risktypes> table, string Risk)
        {
            return table.FirstOrDefault(t =>
                t.Risk == Risk);
        }

        public static t_roleconstraint Find(this ITable<t_roleconstraint> table, int ConnectorID, string Constraint, string ConnectorEnd, string ConstraintType)
        {
            return table.FirstOrDefault(t =>
                t.ConnectorID == ConnectorID &&
                t.Constraint == Constraint &&
                t.ConnectorEnd == ConnectorEnd &&
                t.ConstraintType == ConstraintType);
        }

        public static t_rtfreport Find(this ITable<t_rtfreport> table, string TemplateID)
        {
            return table.FirstOrDefault(t =>
                t.TemplateID == TemplateID);
        }

        public static t_rules Find(this ITable<t_rules> table, string RuleID)
        {
            return table.FirstOrDefault(t =>
                t.RuleID == RuleID);
        }

        public static t_scenariotypes Find(this ITable<t_scenariotypes> table, string ScenarioType)
        {
            return table.FirstOrDefault(t =>
                t.ScenarioType == ScenarioType);
        }

        public static t_secgroup Find(this ITable<t_secgroup> table, string GroupID)
        {
            return table.FirstOrDefault(t =>
                t.GroupID == GroupID);
        }

        public static t_secgrouppermission Find(this ITable<t_secgrouppermission> table, string GroupID, int PermissionID)
        {
            return table.FirstOrDefault(t =>
                t.GroupID == GroupID &&
                t.PermissionID == PermissionID);
        }

        public static t_seclocks Find(this ITable<t_seclocks> table, string EntityID)
        {
            return table.FirstOrDefault(t =>
                t.EntityID == EntityID);
        }

        public static t_secpermission Find(this ITable<t_secpermission> table, int PermissionID)
        {
            return table.FirstOrDefault(t =>
                t.PermissionID == PermissionID);
        }

        public static t_secpolicies Find(this ITable<t_secpolicies> table, string Property)
        {
            return table.FirstOrDefault(t =>
                t.Property == Property);
        }

        public static t_secuser Find(this ITable<t_secuser> table, string UserID)
        {
            return table.FirstOrDefault(t =>
                t.UserID == UserID);
        }

        public static t_secusergroup Find(this ITable<t_secusergroup> table, string UserID, string GroupID)
        {
            return table.FirstOrDefault(t =>
                t.UserID == UserID &&
                t.GroupID == GroupID);
        }

        public static t_secuserpermission Find(this ITable<t_secuserpermission> table, string UserID, int PermissionID)
        {
            return table.FirstOrDefault(t =>
                t.UserID == UserID &&
                t.PermissionID == PermissionID);
        }

        public static t_snapshot Find(this ITable<t_snapshot> table, string SnapshotID)
        {
            return table.FirstOrDefault(t =>
                t.SnapshotID == SnapshotID);
        }

        public static t_stereotypes Find(this ITable<t_stereotypes> table, string Stereotype, string AppliesTo)
        {
            return table.FirstOrDefault(t =>
                t.Stereotype == Stereotype &&
                t.AppliesTo == AppliesTo);
        }

        public static t_taggedvalue Find(this ITable<t_taggedvalue> table, string PropertyID)
        {
            return table.FirstOrDefault(t =>
                t.PropertyID == PropertyID);
        }

        public static t_tasks Find(this ITable<t_tasks> table, int TaskID)
        {
            return table.FirstOrDefault(t =>
                t.TaskID == TaskID);
        }

        public static t_tcf Find(this ITable<t_tcf> table, string TCFID)
        {
            return table.FirstOrDefault(t =>
                t.TCFID == TCFID);
        }

        public static t_template Find(this ITable<t_template> table, string TemplateID)
        {
            return table.FirstOrDefault(t =>
                t.TemplateID == TemplateID);
        }

        public static t_testclass Find(this ITable<t_testclass> table, string TestClass)
        {
            return table.FirstOrDefault(t =>
                t.TestClass == TestClass);
        }

        public static t_testplans Find(this ITable<t_testplans> table, string PlanID)
        {
            return table.FirstOrDefault(t =>
                t.PlanID == PlanID);
        }

        public static t_testtypes Find(this ITable<t_testtypes> table, string TestType)
        {
            return table.FirstOrDefault(t =>
                t.TestType == TestType);
        }

        public static t_trxtypes Find(this ITable<t_trxtypes> table, int TRX_ID)
        {
            return table.FirstOrDefault(t =>
                t.TRX_ID == TRX_ID);
        }

        public static t_umlpattern Find(this ITable<t_umlpattern> table, int PatternID)
        {
            return table.FirstOrDefault(t =>
                t.PatternID == PatternID);
        }

        public static t_version Find(this ITable<t_version> table, string ElementID, string VersionID)
        {
            return table.FirstOrDefault(t =>
                t.ElementID == ElementID &&
                t.VersionID == VersionID);
        }

        public static t_xref Find(this ITable<t_xref> table, string XrefID)
        {
            return table.FirstOrDefault(t =>
                t.XrefID == XrefID);
        }

        public static t_xrefsystem Find(this ITable<t_xrefsystem> table, string XrefID)
        {
            return table.FirstOrDefault(t =>
                t.XrefID == XrefID);
        }

        public static t_xrefuser Find(this ITable<t_xrefuser> table, string XrefID)
        {
            return table.FirstOrDefault(t =>
                t.XrefID == XrefID);
        }

        public static usys_system Find(this ITable<usys_system> table, string Property)
        {
            return table.FirstOrDefault(t =>
                t.Property == Property);
        }

        public static usysTable Find(this ITable<usysTable> table, string TableName)
        {
            return table.FirstOrDefault(t =>
                t.TableName == TableName);
        }
    }
}
